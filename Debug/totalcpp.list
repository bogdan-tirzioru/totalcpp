
totalcpp.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000009c0  08000298  08000298  00010298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000084  08000c58  08000c58  00010c58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08000cdc  08000cdc  00010cdc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08000ce0  08000ce0  00010ce0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000068  24000000  08000ce4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000034  24000068  08000d4c  00020068  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2400009c  08000d4c  0002009c  2**0
                  ALLOC
  8 .ARM.attributes 0000002e  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
  9 .debug_info   00001c01  00000000  00000000  00020096  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000069c  00000000  00000000  00021c97  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges 000001f0  00000000  00000000  00022338  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges 000001b8  00000000  00000000  00022528  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro  000024d5  00000000  00000000  000226e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   000014f2  00000000  00000000  00024bb5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    000ec239  00000000  00000000  000260a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment      00000050  00000000  00000000  001122e0  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00000c58  00000000  00000000  00112330  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000298 <__do_global_dtors_aux>:
 8000298:	b510      	push	{r4, lr}
 800029a:	4c05      	ldr	r4, [pc, #20]	; (80002b0 <__do_global_dtors_aux+0x18>)
 800029c:	7823      	ldrb	r3, [r4, #0]
 800029e:	b933      	cbnz	r3, 80002ae <__do_global_dtors_aux+0x16>
 80002a0:	4b04      	ldr	r3, [pc, #16]	; (80002b4 <__do_global_dtors_aux+0x1c>)
 80002a2:	b113      	cbz	r3, 80002aa <__do_global_dtors_aux+0x12>
 80002a4:	4804      	ldr	r0, [pc, #16]	; (80002b8 <__do_global_dtors_aux+0x20>)
 80002a6:	f3af 8000 	nop.w
 80002aa:	2301      	movs	r3, #1
 80002ac:	7023      	strb	r3, [r4, #0]
 80002ae:	bd10      	pop	{r4, pc}
 80002b0:	24000068 	.word	0x24000068
 80002b4:	00000000 	.word	0x00000000
 80002b8:	08000c40 	.word	0x08000c40

080002bc <frame_dummy>:
 80002bc:	b508      	push	{r3, lr}
 80002be:	4b03      	ldr	r3, [pc, #12]	; (80002cc <frame_dummy+0x10>)
 80002c0:	b11b      	cbz	r3, 80002ca <frame_dummy+0xe>
 80002c2:	4903      	ldr	r1, [pc, #12]	; (80002d0 <frame_dummy+0x14>)
 80002c4:	4803      	ldr	r0, [pc, #12]	; (80002d4 <frame_dummy+0x18>)
 80002c6:	f3af 8000 	nop.w
 80002ca:	bd08      	pop	{r3, pc}
 80002cc:	00000000 	.word	0x00000000
 80002d0:	2400006c 	.word	0x2400006c
 80002d4:	08000c40 	.word	0x08000c40

080002d8 <_ZN6DeviceC1Ev>:
 */

#ifndef DEVICE_HPP_
#define DEVICE_HPP_
#include "stm32h750xx.h"
class Device{
 80002d8:	b480      	push	{r7}
 80002da:	b083      	sub	sp, #12
 80002dc:	af00      	add	r7, sp, #0
 80002de:	6078      	str	r0, [r7, #4]
 80002e0:	4a04      	ldr	r2, [pc, #16]	; (80002f4 <_ZN6DeviceC1Ev+0x1c>)
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	601a      	str	r2, [r3, #0]
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	4618      	mov	r0, r3
 80002ea:	370c      	adds	r7, #12
 80002ec:	46bd      	mov	sp, r7
 80002ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f2:	4770      	bx	lr
 80002f4:	08000cd8 	.word	0x08000cd8

080002f8 <_ZN3PinC1Ev>:

enum class PortName{ PA, PB};

class Pin: public Device{
public:
	Pin(){;};
 80002f8:	b580      	push	{r7, lr}
 80002fa:	b082      	sub	sp, #8
 80002fc:	af00      	add	r7, sp, #0
 80002fe:	6078      	str	r0, [r7, #4]
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	4618      	mov	r0, r3
 8000304:	f7ff ffe8 	bl	80002d8 <_ZN6DeviceC1Ev>
 8000308:	4a03      	ldr	r2, [pc, #12]	; (8000318 <_ZN3PinC1Ev+0x20>)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	601a      	str	r2, [r3, #0]
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	4618      	mov	r0, r3
 8000312:	3708      	adds	r7, #8
 8000314:	46bd      	mov	sp, r7
 8000316:	bd80      	pop	{r7, pc}
 8000318:	08000ccc 	.word	0x08000ccc

0800031c <_ZN3Pin5SetupEv>:
	void Setup(void)
 800031c:	b480      	push	{r7}
 800031e:	b083      	sub	sp, #12
 8000320:	af00      	add	r7, sp, #0
 8000322:	6078      	str	r0, [r7, #4]
	{
		// do something
	}
 8000324:	bf00      	nop
 8000326:	370c      	adds	r7, #12
 8000328:	46bd      	mov	sp, r7
 800032a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800032e:	4770      	bx	lr

08000330 <_ZN4PortC1EP12GPIO_TypeDef>:
class Port: public Device{
	constexpr static unsigned char DataPortWidth = 32;
	Pin data[DataPortWidth];
	GPIO_TypeDef *reg ;
public:
	Port(GPIO_TypeDef *p){reg = p;};
 8000330:	b5b0      	push	{r4, r5, r7, lr}
 8000332:	b082      	sub	sp, #8
 8000334:	af00      	add	r7, sp, #0
 8000336:	6078      	str	r0, [r7, #4]
 8000338:	6039      	str	r1, [r7, #0]
 800033a:	687b      	ldr	r3, [r7, #4]
 800033c:	4618      	mov	r0, r3
 800033e:	f7ff ffcb 	bl	80002d8 <_ZN6DeviceC1Ev>
 8000342:	4a0c      	ldr	r2, [pc, #48]	; (8000374 <_ZN4PortC1EP12GPIO_TypeDef+0x44>)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	601a      	str	r2, [r3, #0]
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	3304      	adds	r3, #4
 800034c:	241f      	movs	r4, #31
 800034e:	461d      	mov	r5, r3
 8000350:	2c00      	cmp	r4, #0
 8000352:	db05      	blt.n	8000360 <_ZN4PortC1EP12GPIO_TypeDef+0x30>
 8000354:	4628      	mov	r0, r5
 8000356:	f7ff ffcf 	bl	80002f8 <_ZN3PinC1Ev>
 800035a:	3504      	adds	r5, #4
 800035c:	3c01      	subs	r4, #1
 800035e:	e7f7      	b.n	8000350 <_ZN4PortC1EP12GPIO_TypeDef+0x20>
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	683a      	ldr	r2, [r7, #0]
 8000364:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	4618      	mov	r0, r3
 800036c:	3708      	adds	r7, #8
 800036e:	46bd      	mov	sp, r7
 8000370:	bdb0      	pop	{r4, r5, r7, pc}
 8000372:	bf00      	nop
 8000374:	08000cc0 	.word	0x08000cc0

08000378 <_ZN6DeviceC1ERKS_>:
 8000378:	b480      	push	{r7}
 800037a:	b083      	sub	sp, #12
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]
 8000380:	6039      	str	r1, [r7, #0]
 8000382:	4a05      	ldr	r2, [pc, #20]	; (8000398 <_ZN6DeviceC1ERKS_+0x20>)
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	601a      	str	r2, [r3, #0]
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	4618      	mov	r0, r3
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000394:	4770      	bx	lr
 8000396:	bf00      	nop
 8000398:	08000cd8 	.word	0x08000cd8

0800039c <_ZN3PinC1ERKS_>:
class Pin: public Device{
 800039c:	b580      	push	{r7, lr}
 800039e:	b082      	sub	sp, #8
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	6078      	str	r0, [r7, #4]
 80003a4:	6039      	str	r1, [r7, #0]
 80003a6:	687b      	ldr	r3, [r7, #4]
 80003a8:	683a      	ldr	r2, [r7, #0]
 80003aa:	4611      	mov	r1, r2
 80003ac:	4618      	mov	r0, r3
 80003ae:	f7ff ffe3 	bl	8000378 <_ZN6DeviceC1ERKS_>
 80003b2:	4a04      	ldr	r2, [pc, #16]	; (80003c4 <_ZN3PinC1ERKS_+0x28>)
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	601a      	str	r2, [r3, #0]
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4618      	mov	r0, r3
 80003bc:	3708      	adds	r7, #8
 80003be:	46bd      	mov	sp, r7
 80003c0:	bd80      	pop	{r7, pc}
 80003c2:	bf00      	nop
 80003c4:	08000ccc 	.word	0x08000ccc

080003c8 <_ZN4Port5SetupEv>:
	virtual void Setup(void)
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b086      	sub	sp, #24
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	6078      	str	r0, [r7, #4]
	{
		for( auto iter:data)
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	3304      	adds	r3, #4
 80003d4:	613b      	str	r3, [r7, #16]
 80003d6:	693b      	ldr	r3, [r7, #16]
 80003d8:	617b      	str	r3, [r7, #20]
 80003da:	693b      	ldr	r3, [r7, #16]
 80003dc:	3380      	adds	r3, #128	; 0x80
 80003de:	60fb      	str	r3, [r7, #12]
 80003e0:	697a      	ldr	r2, [r7, #20]
 80003e2:	68fb      	ldr	r3, [r7, #12]
 80003e4:	429a      	cmp	r2, r3
 80003e6:	d00e      	beq.n	8000406 <_ZN4Port5SetupEv+0x3e>
 80003e8:	f107 0308 	add.w	r3, r7, #8
 80003ec:	6979      	ldr	r1, [r7, #20]
 80003ee:	4618      	mov	r0, r3
 80003f0:	f7ff ffd4 	bl	800039c <_ZN3PinC1ERKS_>
		{
			iter.Setup();
 80003f4:	f107 0308 	add.w	r3, r7, #8
 80003f8:	4618      	mov	r0, r3
 80003fa:	f7ff ff8f 	bl	800031c <_ZN3Pin5SetupEv>
		for( auto iter:data)
 80003fe:	697b      	ldr	r3, [r7, #20]
 8000400:	3304      	adds	r3, #4
 8000402:	617b      	str	r3, [r7, #20]
 8000404:	e7ec      	b.n	80003e0 <_ZN4Port5SetupEv+0x18>
		}
	}
 8000406:	bf00      	nop
 8000408:	3718      	adds	r7, #24
 800040a:	46bd      	mov	sp, r7
 800040c:	bd80      	pop	{r7, pc}
	...

08000410 <_ZN3DioC1Ev>:

	Port list[2] = {Port{GPIOA},Port{GPIOB}};
public:

public:
	Dio(void){;};
 8000410:	b580      	push	{r7, lr}
 8000412:	b082      	sub	sp, #8
 8000414:	af00      	add	r7, sp, #0
 8000416:	6078      	str	r0, [r7, #4]
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	4618      	mov	r0, r3
 800041c:	f7ff ff5c 	bl	80002d8 <_ZN6DeviceC1Ev>
 8000420:	4a0b      	ldr	r2, [pc, #44]	; (8000450 <_ZN3DioC1Ev+0x40>)
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	601a      	str	r2, [r3, #0]
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	2200      	movs	r2, #0
 800042a:	711a      	strb	r2, [r3, #4]
 800042c:	687b      	ldr	r3, [r7, #4]
 800042e:	3308      	adds	r3, #8
 8000430:	4908      	ldr	r1, [pc, #32]	; (8000454 <_ZN3DioC1Ev+0x44>)
 8000432:	4618      	mov	r0, r3
 8000434:	f7ff ff7c 	bl	8000330 <_ZN4PortC1EP12GPIO_TypeDef>
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	3390      	adds	r3, #144	; 0x90
 800043c:	4906      	ldr	r1, [pc, #24]	; (8000458 <_ZN3DioC1Ev+0x48>)
 800043e:	4618      	mov	r0, r3
 8000440:	f7ff ff76 	bl	8000330 <_ZN4PortC1EP12GPIO_TypeDef>
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	4618      	mov	r0, r3
 8000448:	3708      	adds	r7, #8
 800044a:	46bd      	mov	sp, r7
 800044c:	bd80      	pop	{r7, pc}
 800044e:	bf00      	nop
 8000450:	08000cac 	.word	0x08000cac
 8000454:	58020000 	.word	0x58020000
 8000458:	58020400 	.word	0x58020400

0800045c <_ZN3Dio6ToggleE8PortNameh>:
	void Toggle(PortName pm,unsigned char nrpin){value= !value;};
 800045c:	b480      	push	{r7}
 800045e:	b085      	sub	sp, #20
 8000460:	af00      	add	r7, sp, #0
 8000462:	60f8      	str	r0, [r7, #12]
 8000464:	60b9      	str	r1, [r7, #8]
 8000466:	4613      	mov	r3, r2
 8000468:	71fb      	strb	r3, [r7, #7]
 800046a:	68fb      	ldr	r3, [r7, #12]
 800046c:	791b      	ldrb	r3, [r3, #4]
 800046e:	f083 0301 	eor.w	r3, r3, #1
 8000472:	b2da      	uxtb	r2, r3
 8000474:	68fb      	ldr	r3, [r7, #12]
 8000476:	711a      	strb	r2, [r3, #4]
 8000478:	bf00      	nop
 800047a:	3714      	adds	r7, #20
 800047c:	46bd      	mov	sp, r7
 800047e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000482:	4770      	bx	lr

08000484 <_ZN3Dio5SetupEv>:
	void Setup(void){;};
 8000484:	b480      	push	{r7}
 8000486:	b083      	sub	sp, #12
 8000488:	af00      	add	r7, sp, #0
 800048a:	6078      	str	r0, [r7, #4]
 800048c:	bf00      	nop
 800048e:	370c      	adds	r7, #12
 8000490:	46bd      	mov	sp, r7
 8000492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000496:	4770      	bx	lr

08000498 <_ZN3DioD1Ev>:
	virtual ~Dio(void)
 8000498:	b480      	push	{r7}
 800049a:	b083      	sub	sp, #12
 800049c:	af00      	add	r7, sp, #0
 800049e:	6078      	str	r0, [r7, #4]
	{
 80004a0:	4a04      	ldr	r2, [pc, #16]	; (80004b4 <_ZN3DioD1Ev+0x1c>)
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	601a      	str	r2, [r3, #0]

	}
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	4618      	mov	r0, r3
 80004aa:	370c      	adds	r7, #12
 80004ac:	46bd      	mov	sp, r7
 80004ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b2:	4770      	bx	lr
 80004b4:	08000cac 	.word	0x08000cac

080004b8 <_ZN3DioD0Ev>:
	virtual ~Dio(void)
 80004b8:	b580      	push	{r7, lr}
 80004ba:	b082      	sub	sp, #8
 80004bc:	af00      	add	r7, sp, #0
 80004be:	6078      	str	r0, [r7, #4]
	}
 80004c0:	6878      	ldr	r0, [r7, #4]
 80004c2:	f7ff ffe9 	bl	8000498 <_ZN3DioD1Ev>
 80004c6:	f44f 718c 	mov.w	r1, #280	; 0x118
 80004ca:	6878      	ldr	r0, [r7, #4]
 80004cc:	f000 fa01 	bl	80008d2 <_ZdlPvj>
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	4618      	mov	r0, r3
 80004d4:	3708      	adds	r7, #8
 80004d6:	46bd      	mov	sp, r7
 80004d8:	bd80      	pop	{r7, pc}
	...

080004dc <_ZN5TimerC1Ev>:
#ifndef TIMER_HPP_
#define TIMER_HPP_

class Timer: public Device{
public:
	Timer(void){;};
 80004dc:	b580      	push	{r7, lr}
 80004de:	b082      	sub	sp, #8
 80004e0:	af00      	add	r7, sp, #0
 80004e2:	6078      	str	r0, [r7, #4]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	4618      	mov	r0, r3
 80004e8:	f7ff fef6 	bl	80002d8 <_ZN6DeviceC1Ev>
 80004ec:	4a03      	ldr	r2, [pc, #12]	; (80004fc <_ZN5TimerC1Ev+0x20>)
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	601a      	str	r2, [r3, #0]
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	4618      	mov	r0, r3
 80004f6:	3708      	adds	r7, #8
 80004f8:	46bd      	mov	sp, r7
 80004fa:	bd80      	pop	{r7, pc}
 80004fc:	08000c98 	.word	0x08000c98

08000500 <_ZN5Timer5SetupEv>:
	virtual void Setup(void){;};
 8000500:	b480      	push	{r7}
 8000502:	b083      	sub	sp, #12
 8000504:	af00      	add	r7, sp, #0
 8000506:	6078      	str	r0, [r7, #4]
 8000508:	bf00      	nop
 800050a:	370c      	adds	r7, #12
 800050c:	46bd      	mov	sp, r7
 800050e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000512:	4770      	bx	lr

08000514 <_ZN5TimerD1Ev>:
	virtual ~Timer(void){;};
 8000514:	b480      	push	{r7}
 8000516:	b083      	sub	sp, #12
 8000518:	af00      	add	r7, sp, #0
 800051a:	6078      	str	r0, [r7, #4]
 800051c:	4a04      	ldr	r2, [pc, #16]	; (8000530 <_ZN5TimerD1Ev+0x1c>)
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	601a      	str	r2, [r3, #0]
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	4618      	mov	r0, r3
 8000526:	370c      	adds	r7, #12
 8000528:	46bd      	mov	sp, r7
 800052a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800052e:	4770      	bx	lr
 8000530:	08000c98 	.word	0x08000c98

08000534 <_ZN5TimerD0Ev>:
 8000534:	b580      	push	{r7, lr}
 8000536:	b082      	sub	sp, #8
 8000538:	af00      	add	r7, sp, #0
 800053a:	6078      	str	r0, [r7, #4]
 800053c:	6878      	ldr	r0, [r7, #4]
 800053e:	f7ff ffe9 	bl	8000514 <_ZN5TimerD1Ev>
 8000542:	2104      	movs	r1, #4
 8000544:	6878      	ldr	r0, [r7, #4]
 8000546:	f000 f9c4 	bl	80008d2 <_ZdlPvj>
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	4618      	mov	r0, r3
 800054e:	3708      	adds	r7, #8
 8000550:	46bd      	mov	sp, r7
 8000552:	bd80      	pop	{r7, pc}

08000554 <_ZN3CanC1Ev>:
#ifndef CAN_HPP_
#define CAN_HPP_
#include <device.hpp>
class Can: public Device{
public:
	Can(void){;};
 8000554:	b580      	push	{r7, lr}
 8000556:	b082      	sub	sp, #8
 8000558:	af00      	add	r7, sp, #0
 800055a:	6078      	str	r0, [r7, #4]
 800055c:	687b      	ldr	r3, [r7, #4]
 800055e:	4618      	mov	r0, r3
 8000560:	f7ff feba 	bl	80002d8 <_ZN6DeviceC1Ev>
 8000564:	4a03      	ldr	r2, [pc, #12]	; (8000574 <_ZN3CanC1Ev+0x20>)
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	601a      	str	r2, [r3, #0]
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	4618      	mov	r0, r3
 800056e:	3708      	adds	r7, #8
 8000570:	46bd      	mov	sp, r7
 8000572:	bd80      	pop	{r7, pc}
 8000574:	08000c84 	.word	0x08000c84

08000578 <_ZN3Can5SetupEv>:
	virtual void Setup(void){;};
 8000578:	b480      	push	{r7}
 800057a:	b083      	sub	sp, #12
 800057c:	af00      	add	r7, sp, #0
 800057e:	6078      	str	r0, [r7, #4]
 8000580:	bf00      	nop
 8000582:	370c      	adds	r7, #12
 8000584:	46bd      	mov	sp, r7
 8000586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800058a:	4770      	bx	lr

0800058c <_ZN3CanD1Ev>:
	virtual ~Can(void)
 800058c:	b480      	push	{r7}
 800058e:	b083      	sub	sp, #12
 8000590:	af00      	add	r7, sp, #0
 8000592:	6078      	str	r0, [r7, #4]
	{
 8000594:	4a04      	ldr	r2, [pc, #16]	; (80005a8 <_ZN3CanD1Ev+0x1c>)
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	601a      	str	r2, [r3, #0]

	}
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	4618      	mov	r0, r3
 800059e:	370c      	adds	r7, #12
 80005a0:	46bd      	mov	sp, r7
 80005a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005a6:	4770      	bx	lr
 80005a8:	08000c84 	.word	0x08000c84

080005ac <_ZN3CanD0Ev>:
	virtual ~Can(void)
 80005ac:	b580      	push	{r7, lr}
 80005ae:	b082      	sub	sp, #8
 80005b0:	af00      	add	r7, sp, #0
 80005b2:	6078      	str	r0, [r7, #4]
	}
 80005b4:	6878      	ldr	r0, [r7, #4]
 80005b6:	f7ff ffe9 	bl	800058c <_ZN3CanD1Ev>
 80005ba:	2104      	movs	r1, #4
 80005bc:	6878      	ldr	r0, [r7, #4]
 80005be:	f000 f988 	bl	80008d2 <_ZdlPvj>
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	4618      	mov	r0, r3
 80005c6:	3708      	adds	r7, #8
 80005c8:	46bd      	mov	sp, r7
 80005ca:	bd80      	pop	{r7, pc}

080005cc <_ZN3RccC1E13TypeRccSourcem>:
enum class TypeRccSource { HSE,HSI};
class Rcc : public Device
{
	RCC_TypeDef *reg;
public:
	Rcc(TypeRccSource sourceclk,unsigned long value)
 80005cc:	b580      	push	{r7, lr}
 80005ce:	b084      	sub	sp, #16
 80005d0:	af00      	add	r7, sp, #0
 80005d2:	60f8      	str	r0, [r7, #12]
 80005d4:	60b9      	str	r1, [r7, #8]
 80005d6:	607a      	str	r2, [r7, #4]
	{
 80005d8:	68fb      	ldr	r3, [r7, #12]
 80005da:	4618      	mov	r0, r3
 80005dc:	f7ff fe7c 	bl	80002d8 <_ZN6DeviceC1Ev>
 80005e0:	4a05      	ldr	r2, [pc, #20]	; (80005f8 <_ZN3RccC1E13TypeRccSourcem+0x2c>)
 80005e2:	68fb      	ldr	r3, [r7, #12]
 80005e4:	601a      	str	r2, [r3, #0]
		reg = RCC;
 80005e6:	68fb      	ldr	r3, [r7, #12]
 80005e8:	4a04      	ldr	r2, [pc, #16]	; (80005fc <_ZN3RccC1E13TypeRccSourcem+0x30>)
 80005ea:	605a      	str	r2, [r3, #4]

	}
 80005ec:	68fb      	ldr	r3, [r7, #12]
 80005ee:	4618      	mov	r0, r3
 80005f0:	3710      	adds	r7, #16
 80005f2:	46bd      	mov	sp, r7
 80005f4:	bd80      	pop	{r7, pc}
 80005f6:	bf00      	nop
 80005f8:	08000c70 	.word	0x08000c70
 80005fc:	58024400 	.word	0x58024400

08000600 <_ZN3Rcc5SetupEv>:
	virtual void Setup(void)
 8000600:	b480      	push	{r7}
 8000602:	b083      	sub	sp, #12
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
	{

	}
 8000608:	bf00      	nop
 800060a:	370c      	adds	r7, #12
 800060c:	46bd      	mov	sp, r7
 800060e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000612:	4770      	bx	lr

08000614 <_ZN3RccD1Ev>:
	virtual ~Rcc(void)
 8000614:	b480      	push	{r7}
 8000616:	b083      	sub	sp, #12
 8000618:	af00      	add	r7, sp, #0
 800061a:	6078      	str	r0, [r7, #4]
	{
 800061c:	4a04      	ldr	r2, [pc, #16]	; (8000630 <_ZN3RccD1Ev+0x1c>)
 800061e:	687b      	ldr	r3, [r7, #4]
 8000620:	601a      	str	r2, [r3, #0]

	}
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	4618      	mov	r0, r3
 8000626:	370c      	adds	r7, #12
 8000628:	46bd      	mov	sp, r7
 800062a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800062e:	4770      	bx	lr
 8000630:	08000c70 	.word	0x08000c70

08000634 <_ZN3RccD0Ev>:
	virtual ~Rcc(void)
 8000634:	b580      	push	{r7, lr}
 8000636:	b082      	sub	sp, #8
 8000638:	af00      	add	r7, sp, #0
 800063a:	6078      	str	r0, [r7, #4]
	}
 800063c:	6878      	ldr	r0, [r7, #4]
 800063e:	f7ff ffe9 	bl	8000614 <_ZN3RccD1Ev>
 8000642:	2108      	movs	r1, #8
 8000644:	6878      	ldr	r0, [r7, #4]
 8000646:	f000 f944 	bl	80008d2 <_ZdlPvj>
 800064a:	687b      	ldr	r3, [r7, #4]
 800064c:	4618      	mov	r0, r3
 800064e:	3708      	adds	r7, #8
 8000650:	46bd      	mov	sp, r7
 8000652:	bd80      	pop	{r7, pc}

08000654 <_ZN3AppC1Ev>:
	Timer *timeros;
	Device * pDriver[4];


public:
	App(void){
 8000654:	b590      	push	{r4, r7, lr}
 8000656:	b087      	sub	sp, #28
 8000658:	af00      	add	r7, sp, #0
 800065a:	6078      	str	r0, [r7, #4]
 800065c:	4a2e      	ldr	r2, [pc, #184]	; (8000718 <_ZN3AppC1Ev+0xc4>)
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	601a      	str	r2, [r3, #0]
			rcc = new Rcc{TypeRccSource::HSE,8};
 8000662:	2008      	movs	r0, #8
 8000664:	f000 f937 	bl	80008d6 <_Znwj>
 8000668:	4603      	mov	r3, r0
 800066a:	461c      	mov	r4, r3
 800066c:	2208      	movs	r2, #8
 800066e:	2100      	movs	r1, #0
 8000670:	4620      	mov	r0, r4
 8000672:	f7ff ffab 	bl	80005cc <_ZN3RccC1E13TypeRccSourcem>
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	605c      	str	r4, [r3, #4]
			dio =new Dio{};
 800067a:	f44f 708c 	mov.w	r0, #280	; 0x118
 800067e:	f000 f92a 	bl	80008d6 <_Znwj>
 8000682:	4603      	mov	r3, r0
 8000684:	461c      	mov	r4, r3
 8000686:	4620      	mov	r0, r4
 8000688:	f7ff fec2 	bl	8000410 <_ZN3DioC1Ev>
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	609c      	str	r4, [r3, #8]
			can1 = new Can{};
 8000690:	2004      	movs	r0, #4
 8000692:	f000 f920 	bl	80008d6 <_Znwj>
 8000696:	4603      	mov	r3, r0
 8000698:	461c      	mov	r4, r3
 800069a:	4620      	mov	r0, r4
 800069c:	f7ff ff5a 	bl	8000554 <_ZN3CanC1Ev>
 80006a0:	687b      	ldr	r3, [r7, #4]
 80006a2:	60dc      	str	r4, [r3, #12]
			timeros = new Timer{};
 80006a4:	2004      	movs	r0, #4
 80006a6:	f000 f916 	bl	80008d6 <_Znwj>
 80006aa:	4603      	mov	r3, r0
 80006ac:	461c      	mov	r4, r3
 80006ae:	4620      	mov	r0, r4
 80006b0:	f7ff ff14 	bl	80004dc <_ZN5TimerC1Ev>
 80006b4:	687b      	ldr	r3, [r7, #4]
 80006b6:	611c      	str	r4, [r3, #16]
			pDriver[0]= dynamic_cast<Device *>(rcc);
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	685a      	ldr	r2, [r3, #4]
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	615a      	str	r2, [r3, #20]
			pDriver[1]= dynamic_cast<Device *>(dio);
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	689a      	ldr	r2, [r3, #8]
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	619a      	str	r2, [r3, #24]
			pDriver[2]=	dynamic_cast<Device *>(timeros);
 80006c8:	687b      	ldr	r3, [r7, #4]
 80006ca:	691a      	ldr	r2, [r3, #16]
 80006cc:	687b      	ldr	r3, [r7, #4]
 80006ce:	61da      	str	r2, [r3, #28]
			pDriver[3]=	dynamic_cast<Device *>(can1);
 80006d0:	687b      	ldr	r3, [r7, #4]
 80006d2:	68da      	ldr	r2, [r3, #12]
 80006d4:	687b      	ldr	r3, [r7, #4]
 80006d6:	621a      	str	r2, [r3, #32]
			for(auto &iter:pDriver)
 80006d8:	687b      	ldr	r3, [r7, #4]
 80006da:	3314      	adds	r3, #20
 80006dc:	613b      	str	r3, [r7, #16]
 80006de:	693b      	ldr	r3, [r7, #16]
 80006e0:	617b      	str	r3, [r7, #20]
 80006e2:	693b      	ldr	r3, [r7, #16]
 80006e4:	3310      	adds	r3, #16
 80006e6:	60fb      	str	r3, [r7, #12]
 80006e8:	697a      	ldr	r2, [r7, #20]
 80006ea:	68fb      	ldr	r3, [r7, #12]
 80006ec:	429a      	cmp	r2, r3
 80006ee:	d00d      	beq.n	800070c <_ZN3AppC1Ev+0xb8>
 80006f0:	697b      	ldr	r3, [r7, #20]
 80006f2:	60bb      	str	r3, [r7, #8]
			{
				iter->Setup();
 80006f4:	68bb      	ldr	r3, [r7, #8]
 80006f6:	681a      	ldr	r2, [r3, #0]
 80006f8:	68bb      	ldr	r3, [r7, #8]
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	681b      	ldr	r3, [r3, #0]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	4610      	mov	r0, r2
 8000702:	4798      	blx	r3
			for(auto &iter:pDriver)
 8000704:	697b      	ldr	r3, [r7, #20]
 8000706:	3304      	adds	r3, #4
 8000708:	617b      	str	r3, [r7, #20]
 800070a:	e7ed      	b.n	80006e8 <_ZN3AppC1Ev+0x94>
			}
	};
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	4618      	mov	r0, r3
 8000710:	371c      	adds	r7, #28
 8000712:	46bd      	mov	sp, r7
 8000714:	bd90      	pop	{r4, r7, pc}
 8000716:	bf00      	nop
 8000718:	08000c60 	.word	0x08000c60

0800071c <_ZN3App4LoopEv>:
	void Loop(void)
 800071c:	b580      	push	{r7, lr}
 800071e:	b082      	sub	sp, #8
 8000720:	af00      	add	r7, sp, #0
 8000722:	6078      	str	r0, [r7, #4]
	{
		dio->Toggle(PortName::PB,0);
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	689b      	ldr	r3, [r3, #8]
 8000728:	2200      	movs	r2, #0
 800072a:	2101      	movs	r1, #1
 800072c:	4618      	mov	r0, r3
 800072e:	f7ff fe95 	bl	800045c <_ZN3Dio6ToggleE8PortNameh>
	}
 8000732:	bf00      	nop
 8000734:	3708      	adds	r7, #8
 8000736:	46bd      	mov	sp, r7
 8000738:	bd80      	pop	{r7, pc}
	...

0800073c <_ZN3AppD1Ev>:
	virtual ~App(void){
 800073c:	b580      	push	{r7, lr}
 800073e:	b082      	sub	sp, #8
 8000740:	af00      	add	r7, sp, #0
 8000742:	6078      	str	r0, [r7, #4]
 8000744:	4a11      	ldr	r2, [pc, #68]	; (800078c <_ZN3AppD1Ev+0x50>)
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	601a      	str	r2, [r3, #0]
		delete dio;
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	689b      	ldr	r3, [r3, #8]
 800074e:	2b00      	cmp	r3, #0
 8000750:	d004      	beq.n	800075c <_ZN3AppD1Ev+0x20>
 8000752:	681a      	ldr	r2, [r3, #0]
 8000754:	3208      	adds	r2, #8
 8000756:	6812      	ldr	r2, [r2, #0]
 8000758:	4618      	mov	r0, r3
 800075a:	4790      	blx	r2
		delete can1;
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	68db      	ldr	r3, [r3, #12]
 8000760:	2b00      	cmp	r3, #0
 8000762:	d004      	beq.n	800076e <_ZN3AppD1Ev+0x32>
 8000764:	681a      	ldr	r2, [r3, #0]
 8000766:	3208      	adds	r2, #8
 8000768:	6812      	ldr	r2, [r2, #0]
 800076a:	4618      	mov	r0, r3
 800076c:	4790      	blx	r2
		delete timeros;
 800076e:	687b      	ldr	r3, [r7, #4]
 8000770:	691b      	ldr	r3, [r3, #16]
 8000772:	2b00      	cmp	r3, #0
 8000774:	d004      	beq.n	8000780 <_ZN3AppD1Ev+0x44>
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	3208      	adds	r2, #8
 800077a:	6812      	ldr	r2, [r2, #0]
 800077c:	4618      	mov	r0, r3
 800077e:	4790      	blx	r2
	};
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	4618      	mov	r0, r3
 8000784:	3708      	adds	r7, #8
 8000786:	46bd      	mov	sp, r7
 8000788:	bd80      	pop	{r7, pc}
 800078a:	bf00      	nop
 800078c:	08000c60 	.word	0x08000c60

08000790 <_ZN3AppD0Ev>:
	virtual ~App(void){
 8000790:	b580      	push	{r7, lr}
 8000792:	b082      	sub	sp, #8
 8000794:	af00      	add	r7, sp, #0
 8000796:	6078      	str	r0, [r7, #4]
	};
 8000798:	6878      	ldr	r0, [r7, #4]
 800079a:	f7ff ffcf 	bl	800073c <_ZN3AppD1Ev>
 800079e:	2124      	movs	r1, #36	; 0x24
 80007a0:	6878      	ldr	r0, [r7, #4]
 80007a2:	f000 f896 	bl	80008d2 <_ZdlPvj>
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	4618      	mov	r0, r3
 80007aa:	3708      	adds	r7, #8
 80007ac:	46bd      	mov	sp, r7
 80007ae:	bd80      	pop	{r7, pc}

080007b0 <main>:
 ******************************************************************************
 */
#include "App.hpp"

int main(void)
{
 80007b0:	b590      	push	{r4, r7, lr}
 80007b2:	b083      	sub	sp, #12
 80007b4:	af00      	add	r7, sp, #0
    App *app= new App{};
 80007b6:	2024      	movs	r0, #36	; 0x24
 80007b8:	f000 f88d 	bl	80008d6 <_Znwj>
 80007bc:	4603      	mov	r3, r0
 80007be:	461c      	mov	r4, r3
 80007c0:	4620      	mov	r0, r4
 80007c2:	f7ff ff47 	bl	8000654 <_ZN3AppC1Ev>
 80007c6:	607c      	str	r4, [r7, #4]
	/* Loop forever */
	for(;;)
		{
			app->Loop();
 80007c8:	6878      	ldr	r0, [r7, #4]
 80007ca:	f7ff ffa7 	bl	800071c <_ZN3App4LoopEv>
 80007ce:	e7fb      	b.n	80007c8 <main+0x18>

080007d0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80007d0:	b480      	push	{r7}
 80007d2:	af00      	add	r7, sp, #0
  return 1;
 80007d4:	2301      	movs	r3, #1
}
 80007d6:	4618      	mov	r0, r3
 80007d8:	46bd      	mov	sp, r7
 80007da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007de:	4770      	bx	lr

080007e0 <_kill>:

int _kill(int pid, int sig)
{
 80007e0:	b580      	push	{r7, lr}
 80007e2:	b082      	sub	sp, #8
 80007e4:	af00      	add	r7, sp, #0
 80007e6:	6078      	str	r0, [r7, #4]
 80007e8:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80007ea:	f000 f8ad 	bl	8000948 <__errno>
 80007ee:	4603      	mov	r3, r0
 80007f0:	2216      	movs	r2, #22
 80007f2:	601a      	str	r2, [r3, #0]
  return -1;
 80007f4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80007f8:	4618      	mov	r0, r3
 80007fa:	3708      	adds	r7, #8
 80007fc:	46bd      	mov	sp, r7
 80007fe:	bd80      	pop	{r7, pc}

08000800 <_exit>:

void _exit (int status)
{
 8000800:	b580      	push	{r7, lr}
 8000802:	b082      	sub	sp, #8
 8000804:	af00      	add	r7, sp, #0
 8000806:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8000808:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800080c:	6878      	ldr	r0, [r7, #4]
 800080e:	f7ff ffe7 	bl	80007e0 <_kill>
  while (1) {}    /* Make sure we hang here */
 8000812:	e7fe      	b.n	8000812 <_exit+0x12>

08000814 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000814:	b580      	push	{r7, lr}
 8000816:	b086      	sub	sp, #24
 8000818:	af00      	add	r7, sp, #0
 800081a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800081c:	4a14      	ldr	r2, [pc, #80]	; (8000870 <_sbrk+0x5c>)
 800081e:	4b15      	ldr	r3, [pc, #84]	; (8000874 <_sbrk+0x60>)
 8000820:	1ad3      	subs	r3, r2, r3
 8000822:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000824:	697b      	ldr	r3, [r7, #20]
 8000826:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000828:	4b13      	ldr	r3, [pc, #76]	; (8000878 <_sbrk+0x64>)
 800082a:	681b      	ldr	r3, [r3, #0]
 800082c:	2b00      	cmp	r3, #0
 800082e:	d102      	bne.n	8000836 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000830:	4b11      	ldr	r3, [pc, #68]	; (8000878 <_sbrk+0x64>)
 8000832:	4a12      	ldr	r2, [pc, #72]	; (800087c <_sbrk+0x68>)
 8000834:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000836:	4b10      	ldr	r3, [pc, #64]	; (8000878 <_sbrk+0x64>)
 8000838:	681a      	ldr	r2, [r3, #0]
 800083a:	687b      	ldr	r3, [r7, #4]
 800083c:	4413      	add	r3, r2
 800083e:	693a      	ldr	r2, [r7, #16]
 8000840:	429a      	cmp	r2, r3
 8000842:	d207      	bcs.n	8000854 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000844:	f000 f880 	bl	8000948 <__errno>
 8000848:	4603      	mov	r3, r0
 800084a:	220c      	movs	r2, #12
 800084c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800084e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000852:	e009      	b.n	8000868 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000854:	4b08      	ldr	r3, [pc, #32]	; (8000878 <_sbrk+0x64>)
 8000856:	681b      	ldr	r3, [r3, #0]
 8000858:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800085a:	4b07      	ldr	r3, [pc, #28]	; (8000878 <_sbrk+0x64>)
 800085c:	681a      	ldr	r2, [r3, #0]
 800085e:	687b      	ldr	r3, [r7, #4]
 8000860:	4413      	add	r3, r2
 8000862:	4a05      	ldr	r2, [pc, #20]	; (8000878 <_sbrk+0x64>)
 8000864:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000866:	68fb      	ldr	r3, [r7, #12]
}
 8000868:	4618      	mov	r0, r3
 800086a:	3718      	adds	r7, #24
 800086c:	46bd      	mov	sp, r7
 800086e:	bd80      	pop	{r7, pc}
 8000870:	24080000 	.word	0x24080000
 8000874:	00000400 	.word	0x00000400
 8000878:	24000084 	.word	0x24000084
 800087c:	240000a0 	.word	0x240000a0

08000880 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000880:	480d      	ldr	r0, [pc, #52]	; (80008b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000882:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000884:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000888:	480c      	ldr	r0, [pc, #48]	; (80008bc <LoopForever+0x6>)
  ldr r1, =_edata
 800088a:	490d      	ldr	r1, [pc, #52]	; (80008c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800088c:	4a0d      	ldr	r2, [pc, #52]	; (80008c4 <LoopForever+0xe>)
  movs r3, #0
 800088e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000890:	e002      	b.n	8000898 <LoopCopyDataInit>

08000892 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000892:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000894:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000896:	3304      	adds	r3, #4

08000898 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000898:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800089a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800089c:	d3f9      	bcc.n	8000892 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800089e:	4a0a      	ldr	r2, [pc, #40]	; (80008c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80008a0:	4c0a      	ldr	r4, [pc, #40]	; (80008cc <LoopForever+0x16>)
  movs r3, #0
 80008a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80008a4:	e001      	b.n	80008aa <LoopFillZerobss>

080008a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80008a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80008a8:	3204      	adds	r2, #4

080008aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80008aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80008ac:	d3fb      	bcc.n	80008a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80008ae:	f000 f851 	bl	8000954 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80008b2:	f7ff ff7d 	bl	80007b0 <main>

080008b6 <LoopForever>:

LoopForever:
  b LoopForever
 80008b6:	e7fe      	b.n	80008b6 <LoopForever>
  ldr   r0, =_estack
 80008b8:	24080000 	.word	0x24080000
  ldr r0, =_sdata
 80008bc:	24000000 	.word	0x24000000
  ldr r1, =_edata
 80008c0:	24000068 	.word	0x24000068
  ldr r2, =_sidata
 80008c4:	08000ce4 	.word	0x08000ce4
  ldr r2, =_sbss
 80008c8:	24000068 	.word	0x24000068
  ldr r4, =_ebss
 80008cc:	2400009c 	.word	0x2400009c

080008d0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80008d0:	e7fe      	b.n	80008d0 <ADC1_2_IRQHandler>

080008d2 <_ZdlPvj>:
 80008d2:	f000 b814 	b.w	80008fe <_ZdlPv>

080008d6 <_Znwj>:
 80008d6:	2801      	cmp	r0, #1
 80008d8:	bf38      	it	cc
 80008da:	2001      	movcc	r0, #1
 80008dc:	b510      	push	{r4, lr}
 80008de:	4604      	mov	r4, r0
 80008e0:	4620      	mov	r0, r4
 80008e2:	f000 f85b 	bl	800099c <malloc>
 80008e6:	b930      	cbnz	r0, 80008f6 <_Znwj+0x20>
 80008e8:	f000 f81e 	bl	8000928 <_ZSt15get_new_handlerv>
 80008ec:	b908      	cbnz	r0, 80008f2 <_Znwj+0x1c>
 80008ee:	f000 f823 	bl	8000938 <abort>
 80008f2:	4780      	blx	r0
 80008f4:	e7f4      	b.n	80008e0 <_Znwj+0xa>
 80008f6:	bd10      	pop	{r4, pc}

080008f8 <__cxa_pure_virtual>:
 80008f8:	b508      	push	{r3, lr}
 80008fa:	f000 f80f 	bl	800091c <_ZSt9terminatev>

080008fe <_ZdlPv>:
 80008fe:	f000 b855 	b.w	80009ac <free>

08000902 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8000902:	b508      	push	{r3, lr}
 8000904:	4780      	blx	r0
 8000906:	f000 f817 	bl	8000938 <abort>
	...

0800090c <_ZSt13get_terminatev>:
 800090c:	4b02      	ldr	r3, [pc, #8]	; (8000918 <_ZSt13get_terminatev+0xc>)
 800090e:	6818      	ldr	r0, [r3, #0]
 8000910:	f3bf 8f5b 	dmb	ish
 8000914:	4770      	bx	lr
 8000916:	bf00      	nop
 8000918:	24000000 	.word	0x24000000

0800091c <_ZSt9terminatev>:
 800091c:	b508      	push	{r3, lr}
 800091e:	f7ff fff5 	bl	800090c <_ZSt13get_terminatev>
 8000922:	f7ff ffee 	bl	8000902 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08000928 <_ZSt15get_new_handlerv>:
 8000928:	4b02      	ldr	r3, [pc, #8]	; (8000934 <_ZSt15get_new_handlerv+0xc>)
 800092a:	6818      	ldr	r0, [r3, #0]
 800092c:	f3bf 8f5b 	dmb	ish
 8000930:	4770      	bx	lr
 8000932:	bf00      	nop
 8000934:	24000088 	.word	0x24000088

08000938 <abort>:
 8000938:	b508      	push	{r3, lr}
 800093a:	2006      	movs	r0, #6
 800093c:	f000 f956 	bl	8000bec <raise>
 8000940:	2001      	movs	r0, #1
 8000942:	f7ff ff5d 	bl	8000800 <_exit>
	...

08000948 <__errno>:
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <__errno+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	4770      	bx	lr
 800094e:	bf00      	nop
 8000950:	24000004 	.word	0x24000004

08000954 <__libc_init_array>:
 8000954:	b570      	push	{r4, r5, r6, lr}
 8000956:	4d0d      	ldr	r5, [pc, #52]	; (800098c <__libc_init_array+0x38>)
 8000958:	4c0d      	ldr	r4, [pc, #52]	; (8000990 <__libc_init_array+0x3c>)
 800095a:	1b64      	subs	r4, r4, r5
 800095c:	10a4      	asrs	r4, r4, #2
 800095e:	2600      	movs	r6, #0
 8000960:	42a6      	cmp	r6, r4
 8000962:	d109      	bne.n	8000978 <__libc_init_array+0x24>
 8000964:	4d0b      	ldr	r5, [pc, #44]	; (8000994 <__libc_init_array+0x40>)
 8000966:	4c0c      	ldr	r4, [pc, #48]	; (8000998 <__libc_init_array+0x44>)
 8000968:	f000 f96a 	bl	8000c40 <_init>
 800096c:	1b64      	subs	r4, r4, r5
 800096e:	10a4      	asrs	r4, r4, #2
 8000970:	2600      	movs	r6, #0
 8000972:	42a6      	cmp	r6, r4
 8000974:	d105      	bne.n	8000982 <__libc_init_array+0x2e>
 8000976:	bd70      	pop	{r4, r5, r6, pc}
 8000978:	f855 3b04 	ldr.w	r3, [r5], #4
 800097c:	4798      	blx	r3
 800097e:	3601      	adds	r6, #1
 8000980:	e7ee      	b.n	8000960 <__libc_init_array+0xc>
 8000982:	f855 3b04 	ldr.w	r3, [r5], #4
 8000986:	4798      	blx	r3
 8000988:	3601      	adds	r6, #1
 800098a:	e7f2      	b.n	8000972 <__libc_init_array+0x1e>
 800098c:	08000cdc 	.word	0x08000cdc
 8000990:	08000cdc 	.word	0x08000cdc
 8000994:	08000cdc 	.word	0x08000cdc
 8000998:	08000ce0 	.word	0x08000ce0

0800099c <malloc>:
 800099c:	4b02      	ldr	r3, [pc, #8]	; (80009a8 <malloc+0xc>)
 800099e:	4601      	mov	r1, r0
 80009a0:	6818      	ldr	r0, [r3, #0]
 80009a2:	f000 b877 	b.w	8000a94 <_malloc_r>
 80009a6:	bf00      	nop
 80009a8:	24000004 	.word	0x24000004

080009ac <free>:
 80009ac:	4b02      	ldr	r3, [pc, #8]	; (80009b8 <free+0xc>)
 80009ae:	4601      	mov	r1, r0
 80009b0:	6818      	ldr	r0, [r3, #0]
 80009b2:	f000 b803 	b.w	80009bc <_free_r>
 80009b6:	bf00      	nop
 80009b8:	24000004 	.word	0x24000004

080009bc <_free_r>:
 80009bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80009be:	2900      	cmp	r1, #0
 80009c0:	d044      	beq.n	8000a4c <_free_r+0x90>
 80009c2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80009c6:	9001      	str	r0, [sp, #4]
 80009c8:	2b00      	cmp	r3, #0
 80009ca:	f1a1 0404 	sub.w	r4, r1, #4
 80009ce:	bfb8      	it	lt
 80009d0:	18e4      	addlt	r4, r4, r3
 80009d2:	f000 f927 	bl	8000c24 <__malloc_lock>
 80009d6:	4a1e      	ldr	r2, [pc, #120]	; (8000a50 <_free_r+0x94>)
 80009d8:	9801      	ldr	r0, [sp, #4]
 80009da:	6813      	ldr	r3, [r2, #0]
 80009dc:	b933      	cbnz	r3, 80009ec <_free_r+0x30>
 80009de:	6063      	str	r3, [r4, #4]
 80009e0:	6014      	str	r4, [r2, #0]
 80009e2:	b003      	add	sp, #12
 80009e4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80009e8:	f000 b922 	b.w	8000c30 <__malloc_unlock>
 80009ec:	42a3      	cmp	r3, r4
 80009ee:	d908      	bls.n	8000a02 <_free_r+0x46>
 80009f0:	6825      	ldr	r5, [r4, #0]
 80009f2:	1961      	adds	r1, r4, r5
 80009f4:	428b      	cmp	r3, r1
 80009f6:	bf01      	itttt	eq
 80009f8:	6819      	ldreq	r1, [r3, #0]
 80009fa:	685b      	ldreq	r3, [r3, #4]
 80009fc:	1949      	addeq	r1, r1, r5
 80009fe:	6021      	streq	r1, [r4, #0]
 8000a00:	e7ed      	b.n	80009de <_free_r+0x22>
 8000a02:	461a      	mov	r2, r3
 8000a04:	685b      	ldr	r3, [r3, #4]
 8000a06:	b10b      	cbz	r3, 8000a0c <_free_r+0x50>
 8000a08:	42a3      	cmp	r3, r4
 8000a0a:	d9fa      	bls.n	8000a02 <_free_r+0x46>
 8000a0c:	6811      	ldr	r1, [r2, #0]
 8000a0e:	1855      	adds	r5, r2, r1
 8000a10:	42a5      	cmp	r5, r4
 8000a12:	d10b      	bne.n	8000a2c <_free_r+0x70>
 8000a14:	6824      	ldr	r4, [r4, #0]
 8000a16:	4421      	add	r1, r4
 8000a18:	1854      	adds	r4, r2, r1
 8000a1a:	42a3      	cmp	r3, r4
 8000a1c:	6011      	str	r1, [r2, #0]
 8000a1e:	d1e0      	bne.n	80009e2 <_free_r+0x26>
 8000a20:	681c      	ldr	r4, [r3, #0]
 8000a22:	685b      	ldr	r3, [r3, #4]
 8000a24:	6053      	str	r3, [r2, #4]
 8000a26:	4421      	add	r1, r4
 8000a28:	6011      	str	r1, [r2, #0]
 8000a2a:	e7da      	b.n	80009e2 <_free_r+0x26>
 8000a2c:	d902      	bls.n	8000a34 <_free_r+0x78>
 8000a2e:	230c      	movs	r3, #12
 8000a30:	6003      	str	r3, [r0, #0]
 8000a32:	e7d6      	b.n	80009e2 <_free_r+0x26>
 8000a34:	6825      	ldr	r5, [r4, #0]
 8000a36:	1961      	adds	r1, r4, r5
 8000a38:	428b      	cmp	r3, r1
 8000a3a:	bf04      	itt	eq
 8000a3c:	6819      	ldreq	r1, [r3, #0]
 8000a3e:	685b      	ldreq	r3, [r3, #4]
 8000a40:	6063      	str	r3, [r4, #4]
 8000a42:	bf04      	itt	eq
 8000a44:	1949      	addeq	r1, r1, r5
 8000a46:	6021      	streq	r1, [r4, #0]
 8000a48:	6054      	str	r4, [r2, #4]
 8000a4a:	e7ca      	b.n	80009e2 <_free_r+0x26>
 8000a4c:	b003      	add	sp, #12
 8000a4e:	bd30      	pop	{r4, r5, pc}
 8000a50:	2400008c 	.word	0x2400008c

08000a54 <sbrk_aligned>:
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4e0e      	ldr	r6, [pc, #56]	; (8000a90 <sbrk_aligned+0x3c>)
 8000a58:	460c      	mov	r4, r1
 8000a5a:	6831      	ldr	r1, [r6, #0]
 8000a5c:	4605      	mov	r5, r0
 8000a5e:	b911      	cbnz	r1, 8000a66 <sbrk_aligned+0x12>
 8000a60:	f000 f88c 	bl	8000b7c <_sbrk_r>
 8000a64:	6030      	str	r0, [r6, #0]
 8000a66:	4621      	mov	r1, r4
 8000a68:	4628      	mov	r0, r5
 8000a6a:	f000 f887 	bl	8000b7c <_sbrk_r>
 8000a6e:	1c43      	adds	r3, r0, #1
 8000a70:	d00a      	beq.n	8000a88 <sbrk_aligned+0x34>
 8000a72:	1cc4      	adds	r4, r0, #3
 8000a74:	f024 0403 	bic.w	r4, r4, #3
 8000a78:	42a0      	cmp	r0, r4
 8000a7a:	d007      	beq.n	8000a8c <sbrk_aligned+0x38>
 8000a7c:	1a21      	subs	r1, r4, r0
 8000a7e:	4628      	mov	r0, r5
 8000a80:	f000 f87c 	bl	8000b7c <_sbrk_r>
 8000a84:	3001      	adds	r0, #1
 8000a86:	d101      	bne.n	8000a8c <sbrk_aligned+0x38>
 8000a88:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000a8c:	4620      	mov	r0, r4
 8000a8e:	bd70      	pop	{r4, r5, r6, pc}
 8000a90:	24000090 	.word	0x24000090

08000a94 <_malloc_r>:
 8000a94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a98:	1ccd      	adds	r5, r1, #3
 8000a9a:	f025 0503 	bic.w	r5, r5, #3
 8000a9e:	3508      	adds	r5, #8
 8000aa0:	2d0c      	cmp	r5, #12
 8000aa2:	bf38      	it	cc
 8000aa4:	250c      	movcc	r5, #12
 8000aa6:	2d00      	cmp	r5, #0
 8000aa8:	4607      	mov	r7, r0
 8000aaa:	db01      	blt.n	8000ab0 <_malloc_r+0x1c>
 8000aac:	42a9      	cmp	r1, r5
 8000aae:	d905      	bls.n	8000abc <_malloc_r+0x28>
 8000ab0:	230c      	movs	r3, #12
 8000ab2:	603b      	str	r3, [r7, #0]
 8000ab4:	2600      	movs	r6, #0
 8000ab6:	4630      	mov	r0, r6
 8000ab8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000abc:	4e2e      	ldr	r6, [pc, #184]	; (8000b78 <_malloc_r+0xe4>)
 8000abe:	f000 f8b1 	bl	8000c24 <__malloc_lock>
 8000ac2:	6833      	ldr	r3, [r6, #0]
 8000ac4:	461c      	mov	r4, r3
 8000ac6:	bb34      	cbnz	r4, 8000b16 <_malloc_r+0x82>
 8000ac8:	4629      	mov	r1, r5
 8000aca:	4638      	mov	r0, r7
 8000acc:	f7ff ffc2 	bl	8000a54 <sbrk_aligned>
 8000ad0:	1c43      	adds	r3, r0, #1
 8000ad2:	4604      	mov	r4, r0
 8000ad4:	d14d      	bne.n	8000b72 <_malloc_r+0xde>
 8000ad6:	6834      	ldr	r4, [r6, #0]
 8000ad8:	4626      	mov	r6, r4
 8000ada:	2e00      	cmp	r6, #0
 8000adc:	d140      	bne.n	8000b60 <_malloc_r+0xcc>
 8000ade:	6823      	ldr	r3, [r4, #0]
 8000ae0:	4631      	mov	r1, r6
 8000ae2:	4638      	mov	r0, r7
 8000ae4:	eb04 0803 	add.w	r8, r4, r3
 8000ae8:	f000 f848 	bl	8000b7c <_sbrk_r>
 8000aec:	4580      	cmp	r8, r0
 8000aee:	d13a      	bne.n	8000b66 <_malloc_r+0xd2>
 8000af0:	6821      	ldr	r1, [r4, #0]
 8000af2:	3503      	adds	r5, #3
 8000af4:	1a6d      	subs	r5, r5, r1
 8000af6:	f025 0503 	bic.w	r5, r5, #3
 8000afa:	3508      	adds	r5, #8
 8000afc:	2d0c      	cmp	r5, #12
 8000afe:	bf38      	it	cc
 8000b00:	250c      	movcc	r5, #12
 8000b02:	4629      	mov	r1, r5
 8000b04:	4638      	mov	r0, r7
 8000b06:	f7ff ffa5 	bl	8000a54 <sbrk_aligned>
 8000b0a:	3001      	adds	r0, #1
 8000b0c:	d02b      	beq.n	8000b66 <_malloc_r+0xd2>
 8000b0e:	6823      	ldr	r3, [r4, #0]
 8000b10:	442b      	add	r3, r5
 8000b12:	6023      	str	r3, [r4, #0]
 8000b14:	e00e      	b.n	8000b34 <_malloc_r+0xa0>
 8000b16:	6822      	ldr	r2, [r4, #0]
 8000b18:	1b52      	subs	r2, r2, r5
 8000b1a:	d41e      	bmi.n	8000b5a <_malloc_r+0xc6>
 8000b1c:	2a0b      	cmp	r2, #11
 8000b1e:	d916      	bls.n	8000b4e <_malloc_r+0xba>
 8000b20:	1961      	adds	r1, r4, r5
 8000b22:	42a3      	cmp	r3, r4
 8000b24:	6025      	str	r5, [r4, #0]
 8000b26:	bf18      	it	ne
 8000b28:	6059      	strne	r1, [r3, #4]
 8000b2a:	6863      	ldr	r3, [r4, #4]
 8000b2c:	bf08      	it	eq
 8000b2e:	6031      	streq	r1, [r6, #0]
 8000b30:	5162      	str	r2, [r4, r5]
 8000b32:	604b      	str	r3, [r1, #4]
 8000b34:	4638      	mov	r0, r7
 8000b36:	f104 060b 	add.w	r6, r4, #11
 8000b3a:	f000 f879 	bl	8000c30 <__malloc_unlock>
 8000b3e:	f026 0607 	bic.w	r6, r6, #7
 8000b42:	1d23      	adds	r3, r4, #4
 8000b44:	1af2      	subs	r2, r6, r3
 8000b46:	d0b6      	beq.n	8000ab6 <_malloc_r+0x22>
 8000b48:	1b9b      	subs	r3, r3, r6
 8000b4a:	50a3      	str	r3, [r4, r2]
 8000b4c:	e7b3      	b.n	8000ab6 <_malloc_r+0x22>
 8000b4e:	6862      	ldr	r2, [r4, #4]
 8000b50:	42a3      	cmp	r3, r4
 8000b52:	bf0c      	ite	eq
 8000b54:	6032      	streq	r2, [r6, #0]
 8000b56:	605a      	strne	r2, [r3, #4]
 8000b58:	e7ec      	b.n	8000b34 <_malloc_r+0xa0>
 8000b5a:	4623      	mov	r3, r4
 8000b5c:	6864      	ldr	r4, [r4, #4]
 8000b5e:	e7b2      	b.n	8000ac6 <_malloc_r+0x32>
 8000b60:	4634      	mov	r4, r6
 8000b62:	6876      	ldr	r6, [r6, #4]
 8000b64:	e7b9      	b.n	8000ada <_malloc_r+0x46>
 8000b66:	230c      	movs	r3, #12
 8000b68:	603b      	str	r3, [r7, #0]
 8000b6a:	4638      	mov	r0, r7
 8000b6c:	f000 f860 	bl	8000c30 <__malloc_unlock>
 8000b70:	e7a1      	b.n	8000ab6 <_malloc_r+0x22>
 8000b72:	6025      	str	r5, [r4, #0]
 8000b74:	e7de      	b.n	8000b34 <_malloc_r+0xa0>
 8000b76:	bf00      	nop
 8000b78:	2400008c 	.word	0x2400008c

08000b7c <_sbrk_r>:
 8000b7c:	b538      	push	{r3, r4, r5, lr}
 8000b7e:	4d06      	ldr	r5, [pc, #24]	; (8000b98 <_sbrk_r+0x1c>)
 8000b80:	2300      	movs	r3, #0
 8000b82:	4604      	mov	r4, r0
 8000b84:	4608      	mov	r0, r1
 8000b86:	602b      	str	r3, [r5, #0]
 8000b88:	f7ff fe44 	bl	8000814 <_sbrk>
 8000b8c:	1c43      	adds	r3, r0, #1
 8000b8e:	d102      	bne.n	8000b96 <_sbrk_r+0x1a>
 8000b90:	682b      	ldr	r3, [r5, #0]
 8000b92:	b103      	cbz	r3, 8000b96 <_sbrk_r+0x1a>
 8000b94:	6023      	str	r3, [r4, #0]
 8000b96:	bd38      	pop	{r3, r4, r5, pc}
 8000b98:	24000094 	.word	0x24000094

08000b9c <_raise_r>:
 8000b9c:	291f      	cmp	r1, #31
 8000b9e:	b538      	push	{r3, r4, r5, lr}
 8000ba0:	4604      	mov	r4, r0
 8000ba2:	460d      	mov	r5, r1
 8000ba4:	d904      	bls.n	8000bb0 <_raise_r+0x14>
 8000ba6:	2316      	movs	r3, #22
 8000ba8:	6003      	str	r3, [r0, #0]
 8000baa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000bae:	bd38      	pop	{r3, r4, r5, pc}
 8000bb0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8000bb2:	b112      	cbz	r2, 8000bba <_raise_r+0x1e>
 8000bb4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8000bb8:	b94b      	cbnz	r3, 8000bce <_raise_r+0x32>
 8000bba:	4620      	mov	r0, r4
 8000bbc:	f000 f830 	bl	8000c20 <_getpid_r>
 8000bc0:	462a      	mov	r2, r5
 8000bc2:	4601      	mov	r1, r0
 8000bc4:	4620      	mov	r0, r4
 8000bc6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000bca:	f000 b817 	b.w	8000bfc <_kill_r>
 8000bce:	2b01      	cmp	r3, #1
 8000bd0:	d00a      	beq.n	8000be8 <_raise_r+0x4c>
 8000bd2:	1c59      	adds	r1, r3, #1
 8000bd4:	d103      	bne.n	8000bde <_raise_r+0x42>
 8000bd6:	2316      	movs	r3, #22
 8000bd8:	6003      	str	r3, [r0, #0]
 8000bda:	2001      	movs	r0, #1
 8000bdc:	e7e7      	b.n	8000bae <_raise_r+0x12>
 8000bde:	2400      	movs	r4, #0
 8000be0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8000be4:	4628      	mov	r0, r5
 8000be6:	4798      	blx	r3
 8000be8:	2000      	movs	r0, #0
 8000bea:	e7e0      	b.n	8000bae <_raise_r+0x12>

08000bec <raise>:
 8000bec:	4b02      	ldr	r3, [pc, #8]	; (8000bf8 <raise+0xc>)
 8000bee:	4601      	mov	r1, r0
 8000bf0:	6818      	ldr	r0, [r3, #0]
 8000bf2:	f7ff bfd3 	b.w	8000b9c <_raise_r>
 8000bf6:	bf00      	nop
 8000bf8:	24000004 	.word	0x24000004

08000bfc <_kill_r>:
 8000bfc:	b538      	push	{r3, r4, r5, lr}
 8000bfe:	4d07      	ldr	r5, [pc, #28]	; (8000c1c <_kill_r+0x20>)
 8000c00:	2300      	movs	r3, #0
 8000c02:	4604      	mov	r4, r0
 8000c04:	4608      	mov	r0, r1
 8000c06:	4611      	mov	r1, r2
 8000c08:	602b      	str	r3, [r5, #0]
 8000c0a:	f7ff fde9 	bl	80007e0 <_kill>
 8000c0e:	1c43      	adds	r3, r0, #1
 8000c10:	d102      	bne.n	8000c18 <_kill_r+0x1c>
 8000c12:	682b      	ldr	r3, [r5, #0]
 8000c14:	b103      	cbz	r3, 8000c18 <_kill_r+0x1c>
 8000c16:	6023      	str	r3, [r4, #0]
 8000c18:	bd38      	pop	{r3, r4, r5, pc}
 8000c1a:	bf00      	nop
 8000c1c:	24000094 	.word	0x24000094

08000c20 <_getpid_r>:
 8000c20:	f7ff bdd6 	b.w	80007d0 <_getpid>

08000c24 <__malloc_lock>:
 8000c24:	4801      	ldr	r0, [pc, #4]	; (8000c2c <__malloc_lock+0x8>)
 8000c26:	f000 b809 	b.w	8000c3c <__retarget_lock_acquire_recursive>
 8000c2a:	bf00      	nop
 8000c2c:	24000098 	.word	0x24000098

08000c30 <__malloc_unlock>:
 8000c30:	4801      	ldr	r0, [pc, #4]	; (8000c38 <__malloc_unlock+0x8>)
 8000c32:	f000 b804 	b.w	8000c3e <__retarget_lock_release_recursive>
 8000c36:	bf00      	nop
 8000c38:	24000098 	.word	0x24000098

08000c3c <__retarget_lock_acquire_recursive>:
 8000c3c:	4770      	bx	lr

08000c3e <__retarget_lock_release_recursive>:
 8000c3e:	4770      	bx	lr

08000c40 <_init>:
 8000c40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c42:	bf00      	nop
 8000c44:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c46:	bc08      	pop	{r3}
 8000c48:	469e      	mov	lr, r3
 8000c4a:	4770      	bx	lr

08000c4c <_fini>:
 8000c4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c4e:	bf00      	nop
 8000c50:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000c52:	bc08      	pop	{r3}
 8000c54:	469e      	mov	lr, r3
 8000c56:	4770      	bx	lr
